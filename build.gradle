plugins {
    id 'application'
    id 'java'
    id 'idea'
    id 'pmd'
    id 'findbugs'
    id 'maven-publish'
    id "com.jfrog.bintray" version "1.6"
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.8.2'
}

project.description = 'Office Temperature'
project.version = '1.0.4-SNAPSHOT'

mainClassName = 'de.freitag.stefan.officetemperature.Sender'


repositories {
    mavenCentral()
}

dependencies {
    compile files('lib/sht21-core-1.0.2.jar')
    compile 'org.apache.logging.log4j:log4j-api:2.9.1'
    compile 'org.apache.logging.log4j:log4j-core:2.9.1'
    compile 'args4j:args4j:2.33'
    compile 'org.apache.httpcomponents:httpclient:4.5.2'
    compile 'com.pi4j:pi4j-core:1.1'
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-all:1.10.19'
}
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.2.1'
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

def pomConfig = {
    inceptionYear '2016'

    licenses {
        license {
            name "The MIT License (MIT)"
            url "https://github.com/stefanfreitag/golemOfficeTemperature/blob/master/LICENSE"
            distribution "repo"
        }
    }

    scm {
        connection 'scm:git:https://github.com/stefanfreitag/golemOfficeTemperature/'
        developerConnection 'scm:git:https://github.com/stefanfreitag/golemOfficeTemperature/'
        url 'https://github.com/stefanfreitag/golemOfficeTemperature/'
    }
    developers {
        developer {
            id "sfreitag"
            name "Stefan Freitag"
            email "stefan@stefreitag.de"
            timezone "Europe/Berlin"
            roles {
                role "developer"
            }
        }
    }
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact sourcesJar
            artifact javadocJar
            artifact distZip

            groupId 'de.freitag.stefan'
            pom.withXml {
                def root = asNode()
                root.appendNode('description', '')
                root.children().last() + pomConfig
            }
        }
    }
}

bintrayUpload.dependsOn(build)

bintray {
    if (!project.hasProperty('bintray_user')) {
        project.ext.bintray_user = 'default'
    }
    if (!project.hasProperty('bintray_api_key')) {
        project.ext.bintray_api_key = 'default'
    }

    user = "$bintray_user"
    key = "$bintray_api_key"
    publications = ['mavenJava']
    dryRun = false
    publish = true
    pkg {
        repo = 'maven'
        name = 'officeTemperature'
        desc = 'Application to particiate in Golem.de Mitmachprojekt "Wie warm ist es in euren BÃ¼ros?"'
        websiteUrl = 'https://github.com/stefanfreitag/golemOfficeTemperature'
        issueTrackerUrl = 'https://github.com/stefanfreitag/golemOfficeTemperature/issues'
        vcsUrl = 'git://github.com/stefanfreitag/golemOfficeTemperature.git'
        licenses = ['MIT']
        labels = ['Golem.de', 'Temperature', 'Office', 'Mitmachprojekt']
        publicDownloadNumbers = true
        version {
            name = project.version
            vcsTag = project.version
            gpg {
                sign = true
                passphrase = project.hasProperty('gpg_passphrase') ? gpg_passphrase : ''
            }
        }

    }

    tasks.withType(FindBugs) {
        reports {
            xml.enabled = false
            html.enabled = true
        }
    }


    findbugs {
        ignoreFailures = true
        sourceSets = [sourceSets.main]
        reportsDir = file("$project.buildDir/reports/findbugs")
        effort = "max"
    }

    pmd {
        ignoreFailures = true
        sourceSets = [sourceSets.main]
        reportsDir = file("$project.buildDir/reports/pmd")
        ruleSets = [
                "java-basic",
                "java-braces",
                "java-design",
                "java-finalizers",
                "java-junit",
                "java-naming",
                "java-optimizations",
                "java-strings",
                "java-unusedcode"
        ]
    }

}